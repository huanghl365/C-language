一、数组指针是指向数组的指针，跟普通指针不一样，普通指针只是指向数组元素，
而数组指针指向数组首地址.数组指针的步长是整个数组的长度，而普通指针的步长是
一个元素的长度。

二、数组指定的三种定义方法
void testArrPtr() //方法1
{
	typedef int Arr[10]; //定义一个数组类型
	Arr a = { 0 };
	Arr *parr = &a; //定义一个数组类型指针，接收整个数组的首地址，而int *p=&a，接收数组首元素地址
	int i = 0;
	for ( i = 0; i < 10; i++)
	{
		(*parr)[i] = i * 2 + 1;//注意：因为parr = &a，所以(*parr)= a，(*parr)[i] =a[i]
		
	}

	for (i = 0; i < 10; i++)
	{
		printf("%d,", (*parr)[i]);
	}
	printf("\n");
}

void testArrPtr2() //方法2
{
	typedef int Arr[10]; //定义一个数组类型
	Arr a = { 0 };
	typedef int(*P)[10]; //直接定义一个数组指针类型
	P parr = &a; //根据类型定义一个数组指针变量
	int i = 0;
	for (i = 0; i < 10; i++)
	{
		(*parr)[i] = i * 2 + 1;//注意：因为parr = &a，所以(*parr)= a，(*parr)[i] =a[i]

	}

	for (i = 0; i < 10; i++)
	{
		printf("%d,", (*parr)[i]);
	}
	printf("\n");
}


void testArrPtr3() //方法3
{
	typedef int Arr[10]; //定义一个数组类型
	Arr a = { 0 };
	//直接定义数组指针变量
    int(*parr)[10]=&a;  
	int i;
	for (i = 0; i < 10; i++)
	{
		(*parr)[i] = i * 2 ;//注意：因为parr = &a，所以(*parr)= a，(*parr)[i] =a[i]

	}

	for (i = 0; i < 10; i++)
	{
		printf("%d,", (*parr)[i]);
	}
	printf("\n");
}
