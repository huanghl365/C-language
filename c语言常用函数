# c语言输出字符串
#include<stdio.h>

//c语言中，字符串的输出有三种方式:printf("str=%s",str)，puts(str),fputs(str,stdout)
int main() {
    printf("请输入一句话：");
    char str[100]={0};
    fgets(str,100,stdin);
    //printf("str=%s",str); //不会自动换行
   // puts(str); //这个会在屏幕添加换行
   fputs(str,stdout); //不会自动换行
    return 0;
}

# strlen函数和sizeof函数的区别(1)
#include<stdio.h>
#include<string.h>

//c语言中，字符串的输出有三种方式:printf("str=%s",str)，puts(str),fputs(str,stdout)
int main() {
 
     char str[]="hello girls";
     int len = strlen(str);//这个函数得到的是不包含结束符的长度，也就是说实际长度要在这个的基础上加1，还有，这个函数获取不到"\0hello"的长度的，而sizeof没有这个问题
     printf("len=%d\n",len);
     printf("size=%d\n",sizeof(str));//sizeof函数得到的是实际长度，包含换行符
    return 0;
}
# strlen函数和sizeof函数的区别(2)
#include<stdio.h>
#include<string.h>

//c语言中，字符串的输出有三种方式:printf("str=%s",str)，puts(str),fputs(str,stdout)
int main() {
 
     char str[]="\0hello";
     int len = strlen(str);//这个函数得到的是不包含结束符的长度，也就是说实际长度要在这个的基础上加1，还有，这个函数获取不到"\0hello"的长度的，而sizeof没有这个问题
     printf("len=%d\n",len); //0
     printf("size=%d\n",sizeof(str));//7('\0'+hello+'\0') sizeof函数得到的是实际长度，包含换行符
    return 0;
}
# strlen函数和sizeof函数的区别(3)
#include<stdio.h>
#include<string.h>

//c语言中，字符串的输出有三种方式:printf("str=%s",str)，puts(str),fputs(str,stdout)
int main()
{
    char str[100]="mike";
     int len = strlen(str);
     printf("len=%d\n",len); //4
     printf("size=%d\n",sizeof(str)); //100
    return 0;
}

# c语言字符串拷贝实例1
#include<stdio.h>
#include<string.h>

int main() {
    char src[100]="hello girls";
    char dest[100]={0};
    strcpy(dest,src); //注意：这里不能使用dest=src来赋值，因为他们是指针常量，不能给常量赋值，只能将src作为数组来用,也可以使用strncpy，指定需要拷贝多少个字符
    printf("dest=%s",dest);
    return 0;
}

## 注意，strcpy遇到\0，就会结束，也就是说如果一个字符串里面有多个\0,strcpy只会复制第一个\0以前的内容包含这个\0
如：
#include<stdio.h>
#include<string.h>

int main() {
    char src[100]="hello\0 girls";
    char dest[100]={0};
    strcpy(dest,src);
    printf("dest=%s",dest); //结果：dest=hello
    return 0;
}

# c语言字符串比较函数strcmp是比较每一个字符的ascii码，注意："abc" >"Abcd","abc"<"abcd"
#include<stdio.h>
#include<string.h>

int main() {
    char a[]="Hello";
    char b[]="hello";
    int flag = strcmp(a,b); //也可以使用strncmp(a,b,3)指定比较多少个字符
    if (flag>0)
    {
          printf("a[] > b[]");
    }else  if (flag<0)
    {
         printf("a[] < b[]");
    } 
    else
    {
        printf("a[]==b[]");
    }
    
    return 0;
}
