方法一，
#include <stdio.h>
int getmaxelem(int *parr, int n)
{
    int max = 0;
    int i;
    for (i = 0; i < n; i++)
    {
        if (max < *parr)
        {
            max = *parr;
        }
        parr++;
    }

    return max;
}

int main(int argc, char const *argv[])
{
    int a[] = {5,
               100,
               32,
               45,
               21,
               67,
               32,
               68,
               41,
               99,
               13,
               71};
    int size = sizeof(a) / sizeof(*a);
    int max, smax;
    //首先假设第一个和第二个成员为最大和第二大
    if (*(a + 0) > *(a + 1))
    {
        max = *(a + 0);  //最大成员
        smax = *(a + 1); //第二大成员
    }
    else
    {
        max = *(a + 1);
        smax = *(a + 0);
    }

    int i;
    int tmp;
    //从第三个开始如果成员比max大，就把max的值给smax，把比max大的成员的值赋给max
    for (i = 2; i < sizeof(a) / sizeof(*a); i++)
    {
        if (*(a + i) > max)
        {
            smax = max;
            max = *(a + i);
        }
        else if (*(a + i) < max && *(a + i) > smax)
        {
            smax = *(a + i);
        }
    }
    printf("数组中第二大的数是%d", smax);

    return 0;
}

方法二，先对数组利用冒泡法排序，然后再输出数组下标为（长度-2）的元素的值
