void Test2dArr()
{
	int arr[][2] = { {10,20}, {30,15} };
	printf("arr=%d,arr+1=%d\n", arr , arr + 1);   //arr=20183152,arr+1=20183160 //步长位8（2*4）跳过一行
	printf("&arr=%d,&arr+1=%d\n", &arr, &arr + 1);   //&arr=20183152,&arr+1=20183168//步长16，整个二维数组的长度
	printf("*(arr+0)=%d,*(arr+1)=%d\n", *(arr + 0), *(arr + 1));  //*(arr+0)=20183152,*(arr+1)=20183160 //步长位8（2*4）跳过一行
	printf("*arr+0=%d,*arr+1=%d\n", *arr + 0, *arr + 1);  //*arr+0=20183152,*arr+1=20183156 //步长为4，跳过一列
}

注意：一、
arr：代表第0行首地址
arr+1->arr[i]:代表第i行首地址
*(arr+i):代表第i行首元素地址
*(arr+i)+j->&arr[i][j]:代表第i行第j列元素的地址
*(*(arr+i)+j)->arr[i][j]:代表第i行第j列元素的值
二、其实真正的二维数组是不存在的，内存的空间是线性的，
所谓的二维数组只是为了更好理解而已。
实例，用一维数组的方式输出二维数组
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void printArrAs1DM(int *arr, int n)
{
	for (int i = 0; i < n; i++)
	{
		printf("%d ", arr[i]); //结果：1 2 3 4 5 6 7 8 9 10 11 12
	}
	printf("\n");
}

int main(int argc, char const *argv[])
{
	//Test2dArr();
	int arr[][4] = {1,2,3,4,5,6,7,8,9,10,11,12};
	printArrAs1DM(arr, sizeof(arr) / sizeof(arr[0][0]));
	system("pause");
	return 0;
}

以上代码在vs2013在编译通过，结果
 1 2 3 4 5 6 7 8 9 10 11 12